name: Python checks

on:
  push:
    branches: [ '*' ]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.2.2-0

      - uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - name: install poetry
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: poetry install --no-interaction

      - name: Pylint
        run: poetry run pylint .

      - name: Bandit
        if: success() || failure()
        run: poetry run bandit -c pyproject.toml -r .

      - name: Pytest
        if: success() || failure()
        run: poetry run pytest --junitxml=${{ github.workspace }}/pytest_report.xml || [ $? = 1 ]
        env:
          BOUM_SDK_TEST_EMAIL: boum.sdk.test.user@boum.garden
          BOUM_SDK_TEST_PASSWORD: ${{ secrets.BOUM_SDK_TEST_PASSWORD}}
          BOUM_SDK_TEST_DEVICE_ID: 9a8a5e6d-12d5-4997-b9da-0bb446eacb2f
          BOUM_SDK_TEST_BASE_URL: https://api-dev.boum.us
          BOUM_SDK_TEST_USER_ID: 7XDADsQ9FYS0EusHZiZIBMeUerQ2

      - name: Publish pytest report
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          files: ${{ github.workspace }}/pytest_report.xml
          check_name: Pytest Results



