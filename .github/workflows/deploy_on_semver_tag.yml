name: Deployment on push to main

on:
  push:
    tags: [ '[0-9]+.[0-9]+.[0-9]+' ]

jobs:

  deploy:
    name: deploy
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: cache poetry
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.2.2-0

      - name: install poetry
        uses: snok/install-poetry@v1
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: pydeps-0

      - name: poetry install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: poetry install project
        run: poetry install --no-interaction

      - name: poetry build
        run: poetry build

      - name: extract vars
        id: extract-vars
        run: |
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: assert tag matches current version
        run: |
          if [ ${{ steps.extract-vars.outputs.tag }} != ${{ steps.extract-vars.outputs.version }} ]; then
            echo "Tag ${{ steps.extract-vars.outputs.tag }} does not match version ${{ steps.extract-vars.outputs.version }}"
            exit 1
          fi

      - name: Deploy to pypi
        run: poetry publish --build --username __token__ --password ${{ secrets.PYPI_TOKEN }}



